openapi: 3.0.1
info:
  title: Web Scraper
  x-subscribelink: web_scraper
  description: |+
    This Utility microservice extracts content or specific HTML elements from the input URL. It can extract HTML elements that matches the criteria given in the query_list HTTP request parameter. 
    For example, to look for all h1 elements in the webpage, one would pass the following query_list parameter: “query_list:[{‘title’:<name_of_element_you_are_looking_for>,’find_type’:’findall’,‘tag’:’h1’ }]”
    <br>
    The results are returned in JSON format to rapidly retrieve website elements like tables, images, etc. from multiple URLs.
  x-additionalinfo: |+
    x-additionalinfo: |+
      Suggested Use Cases:
      - Can be used for contact scraping, and as a component of applications used for web indexing, web mining and data mining, online price change monitoring and price comparison, product review scraping (to watch the competition), gathering real estate listings, weather data monitoring, website change detection, research, tracking online presence and reputation, web mashup and, web data integration.
    
    Examples:
    
    To get article content, as text
    {"url":&lt;URL&gt;}
    
    Returns all element text matches the tag name:
    <i>{"url":&lt;URL&gt;, query_list:[{"title":<give_your_name_for_the block>,"find_Type":"find_all","tag":"h1"}]}</i><br/><br/>Few query_list Examples:
    
    Returns all Html matches the tag name:
    <i>query_list:[{"title":<give_your_name_for_the block>,"find_type":"find_all","tag":"h1", "return_type":"html"}]</i>
    
    Returns all Image Links:
    <i>query_list:[{"title":<give_your_name_for_the block>,"find_type":"find_all","tag":"img", "attribute":"src"}]</i>
    
    Returns all Links(URL's):
    <i>query_list:[{"title":<give_your_name_for_the block>,"find_type":"find_all","tag":"a", "attribute":"href"}]</i>
    
    Returns all links/text/html/images matches the class name:
    <i>query_list:[{"find_type":"find_all", "class":<class_name>,"tag":"a", "attribute":"href"}],{"find_type":"find_all", "class":<class_name>, "tag":"a"},{"find_type":"find_all", "class":<class_name>, "tag":"a", "return_type":"html"},{"find_type":"find_all", "class":<class_name>, "tag":"img", "attribute":"src"}]</i>
    
    Using select in find_type, either class/tag/id/nested_class_id is mandatory:
    <i>query_list:[{"find_type":"select", "class_":<class_name>, "tag":<tag_name>}]
    query_list:[{"find_type":"select", "class_":<class_name>}]
    query_list:[{"find_type":"select", "tag":<tag_name>}]
    query_list:[{"find_type":"select", "id":, "tag":<tag_name>}]
    query_list:[{"find_type":"select", "id":}]
    query_list:[{"find_type":"select", "tag":<tag_name>}]
    query_list:[{"find_type":"select", "nested_class_id":<nested class/id/tags>}]
    query_list:[{"find_type":"select", "nested_class_id":<nested class/id/tags>, "return_type":"html"}]
    query_list:[{"find_type":"select", "nested_class_id":<nested class/id/tags>, "attribute":"href"}]</i>
    Example using nested_class_id:<pre>&lt;div&gt;<br>&nbsp;&nbsp;&nbsp;&lt;h1&gt;This is heading&lt;/h1>&gt;<br>&nbsp;&nbsp;&nbsp;&lt;p class="strikeout"&gt;This is paragraph 1&lt;/h1>&gt;<br>&nbsp;&nbsp;&nbsp;&lt;p class="strikeout"&gt;This is paragraph 2&lt;/h1>&gt;<br>&nbsp;&nbsp;&nbsp;&lt;p class="strikeout"&gt;This is paragraph 3&lt;/h1>&gt;<br>&lt;/div&gt;<br>&lt;div id="div2" class="divclass2"&gt;<br>&nbsp;&nbsp;&nbsp;&lt;h1&gt;This is another heading 2&lt;/h1>&gt;<br>&nbsp;&nbsp;&nbsp;&lt;p class="strikeout"&gt;This is paragraph 4&lt;/p&gt;<br>&nbsp;&nbsp;&nbsp;&lt;p class="strikeout"&gt;This is paragraph 5&lt;/p&gt;<br>&nbsp;&nbsp;&nbsp;&lt;p class="strikeout"&gt;This is paragraph 6&lt;/p&gt;<br>&nbsp;&nbsp;&nbsp;&lt;ul&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a href="<https://www.google.com"&gt;&lt;/a&gt;Google&lt;/li&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li class="class3"&gt;&lt;a href="<https://www.facebook.com"&gt;&lt;/a&gt;Facebook&lt;/li&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;&lt;a href="<https://www.twitter.com"&gt;&lt;/a&gt;Twitter&lt;/li&gt;<br>&nbsp;&nbsp;&nbsp;&lt;/ul&gt;<br>&lt;/div&gt;</pre><br>To get tags that match one or more class names<br/><i>&nbsp;&nbsp;&nbsp;"query_list":[{"find_type":"select", "nestedClassId":"p.strikeout"}]</i>
    To get h1 tags that match one or more class names
    <i>&nbsp;&nbsp;&nbsp;"query_list":[{"find_type":"select", "nested_class_id":"h1"}]</i>
    To get all p tags that matches element id
    <i>&nbsp;&nbsp;&nbsp;"query_list":[{"find_type":"select", "nested_class_id":"div#div2 p"}]</i>
    To get all litags that matches the element id<br/><i>&nbsp;&nbsp;&nbsp;"query_list":[{"find_type":"select", "nested_class_id":"div#div2 ul li"}]</i><br/>To get links from ul list
    <i>&nbsp;&nbsp;&nbsp;"query_list":[{"find_type":"select", "nested_class_id":"ul li a"}]</i>
    To get links from ul list that matches one or more class names<br/><i>&nbsp;&nbsp;&nbsp;"query_list":[{"find_type":"select", "nested_class_id":"ul li.class3 a"}]</i>
    To get links a element that matches the element id and class name<br/><i>&nbsp;&nbsp;&nbsp;"query_list":[{"find_type":"select", "nested_class_id":"div#div2 ul li.class3 a"}]</i>
    
    <b>Notes:</b>
    title - is an optional parameter, if title is empty the return json key is "values"<br/>find_type - find/find_all/select
    &nbsp;&nbsp;&nbsp;&bull;&nbsp;find - returns first matching possibility<br/>&nbsp;&nbsp;&nbsp;&bull;&nbsp;find_all - returns all matching possibilities
    &nbsp;&nbsp;&nbsp;&bull;&nbsp;select - If you want to search for tags that match two or more CSS classes. either nested_class_id is mandatory
    **return_type is not supported with attribute.
    
    The results are returned in JSON format and allow for developers to rapidly retrieve website elements like tables, images, etc. from URL
  version: '2.0.0'
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | One URL /Call
  x-inputfilelimit: |+
    Process One URL per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by per request.
  x-notes: |+
    Allows One URL per request.
  x-apidetailsdesc: |+
    Extracts content or specific HTML elements from the input URL.
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v2.0.0"
  description: "Published Date - Jun 20, 2022"
paths:
  /microservices/utility/webscraping/v2/getresults:
    post:
      tags:
        - v2.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                message: Successfully Processed
                results:
                  data: |-
                    BBC - HomeBBC HomepageSkip to contentAccessibility Helpsign-inBBC AccountHomeNewsSportReelWorklifeTravelFutureCultureMenuMorecaret-downsearchSearchHomeNewsSportReelWorklifeTravelFutureCultureMusicTVWeatherSoundsnoClose menuWelcome to the BBCBBC HomepagePM warns virus deaths could be 'twice as bad' as springAttributionUKPrince William 'contracted Covid-19 in April'AttributionUKWhich Strictly celeb is the first to leave?AttributionBBC OneMore top storiesBale heads winner to send Spurs secondAttributionFootballWho's ahead in the polls - Trump or Biden?AttributionUS Election 2020Five alternatives to saving money with the bankAttributionBBC ScotlandCoronavirus pandemicnextSpain's funeral homes strike as virus cases riseAttributionEuropeHow many coronavirus cases are there in your area?AttributionUKPolice battle to break up 700-strong illegal raveAttributionEnglandNews headlinesnextScotland's new regional Covid restrictions go liveAttributionScotlandBiden and Trump criss-cross the US as vote nearsAttributionUS Election 2020Veteran journalist Robert Fisk dies aged 74AttributionMiddle EastSport headlinesnextPogba says he made 'stupid mistake'AttributionMan Utd'I don't know the direction Man Utd are going' - MOTD2 analysis. Video'I don't know the direction Man Utd are going' - MOTD2 analysisAttributionMan UtdplayMan City win FA Cup after extra timeAttributionWomen's FootballUS Election 2020nextUS election: Trump is in the fight of his political lifeAttributionUS Election 2020The Asians who want Trump to win re-electionAttributionAsiaThe 750,000 people you didn't know could voteAttributionUS Election 2020Around the UKnextScotland's new regional Covid restrictions go liveAttributionScotlandFollow rules plea ahead of post-lockdown exit planAttributionWalesEight more coronavirus-related deaths in NIAttributionNorthern IrelandThe BBC around the UKScotlandALBAWalesCymruNI3 things we love todayYour pictures on the theme of 'urban living'AttributionIn PicturesCan you guess the celebrity childhood photo?AttributionBBC BitesizeThis Celtic rainforest has the calm vibes we all need. VideoThis Celtic rainforest has the calm vibes we all needAttributionBBC TwoplayPlant powerPlant power, Should you swap that beef burger for a vegan version?Should you swap that beef burger for a vegan version?Watch what might happen if the entire world switched to a plant-based dietAttributionBBC IdeasEntertainment news'This is one of my films of the year'AttributionBBC Radio 5 LiveBill surprises fans with nimble feet (and an elephant)AttributionBBC OneSean Connery's greatest moments on screen - in picturesAttributionEntertainment & ArtsSocietyCouple trolled for intimate wedding photoshootAttributionIndia'I raise £2,000 a month to keep my daughter alive'AttributionEngland'Collaborative effort' needed to help gay players come outAttributionEnglandOur Planet NownextThe BBC’s ongoing focus on the environment and the challenges facing our planetYou've got cheap data, how about cheap power too?Publishedduration2 days agoAttributionScience & EnvironmentThe Repair Shop's Jay Blades: 'Make do and mend' for the planet. Video, 00:03:15The Repair Shop's Jay Blades: 'Make do and mend' for the planetPublishedduration2 days agoplay3:15'You could see avocados growing in Hackney' Video, 00:01:04'You could see avocados growing in Hackney'Publishedduration3 days agoAttributionLondonplay1:04Real-life storiesSteph McGovern on 'toning it down' for TV, Trump and pregnancy. AudioSteph McGovern on 'toning it down' for TV, Trump and pregnancyAttributionBBC Radio 4listen'Nobody would help me until Keanu Reeves turned up!' Video'Nobody would help me until Keanu Reeves turned up!'AttributionBBC OneplayDoctor duped into buying 'Aladdin's lamp' for $41,600AttributionIndiaYou might have missedA magical underwater moment captured on film. VideoA magical underwater moment captured on filmAttributionBBC TwoplayHouse prices climb to record high, says NationwideAttributionBusinessCornwall Poldark house fallen into 'complete disrepair'AttributionEnglandFoodnextPerfect pot-roasts with minimum effortAttributionBBC FoodA super-speedy version of a takeaway classicAttributionBBC FoodHealthy winter warmers to keep you full for longerAttributionBBC FoodLifestyleThree tips to help you through redundancy. VideoThree tips to help you through redundancyAttributionBBC IdeasplayGet your ramble on with Countryfile's top hiking tipsAttributionBBC Children in NeedAwesome autumn activities for younger kidsAttributionTiny Happy PeopleThis week in sportWilder questions Fury gloves in rematchAttributionBoxingTributes after ex-Hearts captain Zaliukas dies aged 36AttributionFootballVerstappen sorry for offensive language during
                    Portuguese GPAttributionFormula 1Behind the headlinesCharlie Hebdo attack suspect tests positive for Covid-19AttributionEuropeBerlin's new €6bn airport opens... 10 years late. VideoBerlin's new €6bn airport opens... 10 years lateAttributionWorldplayNew York man plunges into rat-infested sinkholeAttributionUS & CanadaTime well spentSam Smith's track-by-track guide to their new album. AudioSam Smith's track-by-track guide to their new albumAttributionBBC Radio 1listenRap Game star shares his Black History Month picksAttributionBBC ThreeThese eerie stories might just keep you awake at nightAttributionBBC Radio 4Modern Slavery StatementRead moreThe BBC around the UKScotlandALBAWalesCymruNIOther servicesComplaintsUS Election 2020A really simple guide to the electionAttributionBBC NewsDisinformation: How to spot it. iPlayerDisinformation: How to spot itAttributionBBC iPlayeriplayerWho do you think will win?AttributionBBC NewsOdd happenings from past US electionsAttributionBBC BitesizeHomeNewsSportReelWorklifeTravelFutureCultureMusicTVWeatherSoundsTerms of UseAbout the BBCPrivacy PolicyCookiesAccessibility HelpParental GuidanceContact the BBCGet Personalised NewslettersWhy you can trust the BBCAdvertise with usAdChoices / Do Not Sell My Info© 2020 BBC. The BBC is not responsible for the content of external sites. Read about our approach to external linking.
                  data_list:
                  - imagelinks:
                    - https://ichef.bbci.co.uk/images/ic/240x135/p08x3gpx.jpg
                    - https://ichef.bbci.co.uk/curationkit-ichef/240x135/cpsprodpb/16FC3/production/_115174149_063942058.jpg
                    - https://ichef.bbci.co.uk/images/ic/240x135/p08x2qxp.jpg
                    - https://ichef.bbci.co.uk/images/ic/240x135/p08x39pc.jpg
                    - https://ichef.bbci.co.uk/images/ic/240x135/p08wsqty.jpg
                    - https://ichef.bbci.co.uk/images/ic/240x135/p08vchc7.jpg
                status: Success              
        '400':
          description: Restricted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restricted'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'    
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      type: object
      properties:
        message:
          type: string
          example: successfully processed
          description: Description of the API status
        status:
          type: string
          example: success
          description: The status of the API call - success/failure
        results:
          type: object
          example: {"data": "text content of the webpage","data_list": [{ "title": "imagelinks", "find_type": "find_all", "tag": "img", "attribute": "src" }]}
          description: Json Object of returned results
          properties:
            data: 
              type: string
              example: "BBC - HomeBBC HomepageSkip to contentAccessibility Helpsign-inBBC AccountHomeNewsSportReelWorklifeTravelFutureCultureMenuMorecaret-downsearchSearchHomeNewsSportReelWorklifeTravelFutureCultureMusicTVWeatherSoundsnoClose menuWelcome to the BBCBBC HomepagePM warns virus deaths could be 'twice as bad' as springAttributionUKPrince William 'contracted Covid-19 in April'AttributionUKWhich Strictly celeb is the first to leave?AttributionBBC OneMore top storiesBale heads winner to send Spurs secondAttributionFootballWho's ahead in the polls - Trump or Biden?AttributionUS Election 2020Five alternatives to saving money with the bankAttributionBBC ScotlandCoronavirus pandemicnextSpain's funeral homes strike as virus cases riseAttributionEuropeHow many coronavirus cases are there in your area?AttributionUKPolice battle to break up 700-strong illegal raveAttributionEnglandNews headlinesnextScotland's new regional Covid restrictions go liveAttributionScotlandBiden and Trump criss-cross the US as vote nearsAttributionUS Election 2020Veteran journalist Robert Fisk dies aged 74AttributionMiddle EastSport headlinesnextPogba says he made 'stupid mistake'AttributionMan Utd'I don't know the direction Man Utd are going' - MOTD2 analysis. Video'I don't know the direction Man Utd are going' - MOTD2 analysisAttributionMan UtdplayMan City win FA Cup after extra timeAttributionWomen's FootballUS Election 2020nextUS election: Trump is in the fight of his political lifeAttributionUS Election 2020The Asians who want Trump to win re-electionAttributionAsiaThe 750,000 people you didn't know could voteAttributionUS Election 2020Around the UKnextScotland's new regional Covid restrictions go liveAttributionScotlandFollow rules plea ahead of post-lockdown exit planAttributionWalesEight more coronavirus-related deaths in NIAttributionNorthern IrelandThe BBC around the UKScotlandALBAWalesCymruNI3 things we love todayYour pictures on the theme of 'urban living'AttributionIn PicturesCan you guess the celebrity childhood photo?AttributionBBC BitesizeThis Celtic rainforest has the calm vibes we all need. VideoThis Celtic rainforest has the calm vibes we all needAttributionBBC TwoplayPlant powerPlant power, Should you swap that beef burger for a vegan version?Should you swap that beef burger for a vegan version?Watch what might happen if the entire world switched to a plant-based dietAttributionBBC IdeasEntertainment news'This is one of my films of the year'AttributionBBC Radio 5 LiveBill surprises fans with nimble feet (and an elephant)AttributionBBC OneSean Connery's greatest moments on screen - in picturesAttributionEntertainment & ArtsSocietyCouple trolled for intimate wedding photoshootAttributionIndia'I raise £2,000 a month to keep my daughter alive'AttributionEngland'Collaborative effort' needed to help gay players come outAttributionEnglandOur Planet NownextThe BBC’s ongoing focus on the environment and the challenges facing our planetYou've got cheap data, how about cheap power too?Publishedduration2 days agoAttributionScience & EnvironmentThe Repair Shop's Jay Blades: 'Make do and mend' for the planet. Video, 00:03:15The Repair Shop's Jay Blades: 'Make do and mend' for the planetPublishedduration2 days agoplay3:15'You could see avocados growing in Hackney' Video, 00:01:04'You could see avocados growing in Hackney'Publishedduration3 days agoAttributionLondonplay1:04Real-life storiesSteph McGovern on 'toning it down' for TV, Trump and pregnancy. AudioSteph McGovern on 'toning it down' for TV, Trump and pregnancyAttributionBBC Radio 4listen'Nobody would help me until Keanu Reeves turned up!' Video'Nobody would help me until Keanu Reeves turned up!'AttributionBBC OneplayDoctor duped into buying 'Aladdin's lamp' for $41,600AttributionIndiaYou might have missedA magical underwater moment captured on film. VideoA magical underwater moment captured on filmAttributionBBC TwoplayHouse prices climb to record high, says NationwideAttributionBusinessCornwall Poldark house fallen into 'complete disrepair'AttributionEnglandFoodnextPerfect pot-roasts with minimum effortAttributionBBC FoodA super-speedy version of a takeaway classicAttributionBBC FoodHealthy winter warmers to keep you full for longerAttributionBBC FoodLifestyleThree tips to help you through redundancy. VideoThree tips to help you through redundancyAttributionBBC IdeasplayGet your ramble on with Countryfile's top hiking tipsAttributionBBC Children in NeedAwesome autumn activities for younger kidsAttributionTiny Happy PeopleThis week in sportWilder questions Fury gloves in rematchAttributionBoxingTributes after ex-Hearts captain Zaliukas dies aged 36AttributionFootballVerstappen sorry for offensive language during\nPortuguese GPAttributionFormula 1Behind the headlinesCharlie Hebdo attack suspect tests positive for Covid-19AttributionEuropeBerlin's new €6bn airport opens... 10 years late. VideoBerlin's new €6bn airport opens... 10 years lateAttributionWorldplayNew York man plunges into rat-infested sinkholeAttributionUS & CanadaTime well spentSam Smith's track-by-track guide to their new album. AudioSam Smith's track-by-track guide to their new albumAttributionBBC Radio 1listenRap Game star shares his Black History Month picksAttributionBBC ThreeThese eerie stories might just keep you awake at nightAttributionBBC Radio 4Modern Slavery StatementRead moreThe BBC around the UKScotlandALBAWalesCymruNIOther servicesComplaintsUS Election 2020A really simple guide to the electionAttributionBBC NewsDisinformation: How to spot it. iPlayerDisinformation: How to spot itAttributionBBC iPlayeriplayerWho do you think will win?AttributionBBC NewsOdd happenings from past US electionsAttributionBBC BitesizeHomeNewsSportReelWorklifeTravelFutureCultureMusicTVWeatherSoundsTerms of UseAbout the BBCPrivacy PolicyCookiesAccessibility HelpParental GuidanceContact the BBCGet Personalised NewslettersWhy you can trust the BBCAdvertise with usAdChoices / Do Not Sell My Info© 2020 BBC. The BBC is not responsible for the content of external sites. Read about our approach to external linking."
              description: Text content of the webpage.
            data_list:
              type: array
              example: [{"imagelinks": ["https://ichef.bbci.co.uk/images/ic/240x135/p08x3gpx.jpg","https://ichef.bbci.co.uk/curationkit-ichef/240x135/cpsprodpb/16FC3/production/_115174149_063942058.jpg","https://ichef.bbci.co.uk/images/ic/240x135/p08x2qxp.jpg","https://ichef.bbci.co.uk/images/ic/240x135/p08x39pc.jpg","https://ichef.bbci.co.uk/images/ic/240x135/p08wsqty.jpg","https://ichef.bbci.co.uk/images/ic/240x135/p08vchc7.jpg"]}]
              description: Extracted results of query_list in a list format.
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    restricted:
      type: object
      properties:
        message:
          type: string
          example: The content is restricted
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request
        status:
          type: string
          example: Failure
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties:
        v2.0.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Jun 20, 2022
              x-details: Major version update       
              description: Latest Version
        v1.1.1:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Dec 04, 2020
              x-details: Patch Update       
              description: Old Version
        v1.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Oct 30, 2020
              x-details: Partial URL support 
              description: Depreciating on Dec 03, 2020
        v1.0.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Jul 03, 2020
              x-details: Improvised search filters using query_list, now you can even navigate down the html tree like get all p tag inside a div class "class":"class_name p"
              description: Depreciating on Oct 29, 2020
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Jul 18, 2018
              x-details: Initial version release
              description: Archived
    input:
      type: object
      properties:
        url:
          type: string
          default: true
          example: https://www.bbc.co.uk
          description: Webpage URL. It also support partial URL like bbc.co.uk
        query_list:
          type: array
          default: false
          example: [{"title":<give_your_name_for_the block>,"find_type":"find_all","tag":"h1", "return_type":"html"}]
          description: List of extraction conditions.
          items:
            oneOf:
              - type: object
                properties:
                  find_type:
                    x-name: find_type
                    type: string
                    default: false
                    example: |+
                     find_all
                    description: |+
                      Extraction Type. Possible values are:
                      1. find - returns the first matching possibility
                      2. find_all - returns the all matching possibility
                      3. select - If you want to search for tags that match two or more CSS classes. either nested_class_id is mandatory 
                  tag:
                    x-name: tag
                    type: string
                    default: false
                    example: h1
                    description: |+
                      The HTML tag to extract
                  id:
                    x-name: id
                    type: string
                    default: false
                    example: sampleid 
                    description: |+
                      The HTML element id to extract
                  class:
                    x-name: class
                    type: string
                    default: false
                    example: sampleclass 
                    description: |+
                      The HTML element classname to extract
                  nested_class_id:
                    x-name: nestedclassid
                    type: string
                    default: false
                    example: p.strikeout
                    description: |+
                      The nested HTML tags. Example: p.strikeout - looks for those matching "strikeout" classname inside the "p" element.
                      Add additional nesting elments using .(dot) to concatenate
                  attribute:
                    x-name: attribute
                    type: string
                    default: false
                    example: src
                    description: |+
                      The HTML element attribute to extract, supported only with tag/id/class/nested_class_id
                  title:
                    x-name: title
                    type: string
                    default: false
                    example: mytitle
                    description: |+
                      The key value of the extracted result. By default, the return json key is "values".
                  return_type:
                    x-name: return_type
                    type: string
                    default: false
                    example: html
                    description: |+
                      Optional input parameter. If no input parameter is specified, the default return type would be text. 
                      Use “html” to set return type to HTML format
                      
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
