openapi: 3.0.1
info:
  title: LTA Bus Services
  x-subscribelink: lta_busservices
  description: |+
      Returns detailed service information for all buses currently in operation, including: first stop, last stop, peak / offpeak frequency of dispatch.
      This microservice contains information from LTA Datamall's BUS SERVICES dataset which is made available under the terms of the
      [Singapore Open Data Licence version 1.0](https://data.gov.sg/open-data-licence).
  x-additionalinfo : |+
    **Match Types:**
    A match type is a match operator. The supported match types are&#58;
    * **match_phrase** - Search within a full text field
      > {"match_phrase":{"loopdesc": "Bedok Nth St 3"}}
      > {"match_phrase":{"category": "FEEDER"}} or {"match_phrase":{"category": "feeder"}}
    * **match** - Search within a full text field for a single word
      > {"match":{"category": "FEEDER"}} or {"match":{"category": "feeder"}}
      > {"match":{"loopdesc": "Hougang"}}
      > {"match":{"serviceno": "386"}}
    * **range** - Returns results that contain terms within a stipulated range
      > {"range": {"lastupdated": {"gte": "2022-03-23", "lte": "2022-03-23"}}}
    * **exists** - Returns results that contain any indexed value for a field
      > {"exists":{"field":"operator"}}

    **Aggregations Request Data:**
    An aggregation helps in summarizing your data
    Set aggregation - true
      > {"match":{"loopdesc": "Hougang"}}

    **Collapse:**
    You can use the collapse parameter to collapse search results based on field values. The collapsing is done by selecting only the top sorted document per collapse key
      > {"match":{"loopdesc": "Hougang"}}

  version: '0.1.0'
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 10MB/Call
  x-inputfilelimit: |+
    Process up to 10000 kb of data or chat per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by per request.
  x-notes: |+
    Process up to 10,000 records.
  x-apidetailsdesc: |+
    Provides detailed route information for all services currently in operation.
servers:
  - url: 'http://168.177.101.39:30015'
tags:
- name: "v0.1.0"
  description: "Published Date - Mar 26, 2022"
paths:
  /microservices/data/ltabusservices/v0/getdata:
    post:
      tags:
        - v0.1.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                message: Successfully Processed
                results:
                  hits:
                  - _id: eff975fc922d4a6738f65ff41f5112040f084162
                    _index: lta_busservices
                    _score:
                    _source:
                      am_offpeak_freq: 9-13
                      am_peak_freq: 9-10
                      category: FEEDER
                      destinationcode: '64009'
                      direction: 1
                      lastupdated: '2022-03-23T16:29:08.440Z'
                      loopdesc: Hougang St 91
                      operator: SBST
                      origincode: '64009'
                      pm_offpeak_freq: 10-13
                      pm_peak_freq: 9-10
                      serviceno: '325'
                      source: lta
                      uniqueid: eff975fc922d4a6738f65ff41f5112040f084162
                    _type: _doc
                    sort:
                    - 1648052948440
                  max_score:
                  total:
                    relation: eq
                    value: 1
                status: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      type: object
      properties:
        message:
          type: string
          example: Successfully Processed
          description: The detail description on the status
        status:
          type: string
          example: Success
          description: The status of the API call Success/Failure
        results:
          type: object
          example: {<Json Object>}
          description: Json Object of returned results
          properties:
            total:
              type: integer
              example: 1
              description: Total number of records
            relation:
              type: text
              example: eq
              description: Indicates the accuracy of the total number of records (e.g. "eq" means equals)
            max_score:
              type: number
              example: 0
              description: The highest score value
            hits:
              type: array
              example: [{<JSON result Object}]
              description: The list of Json result object
              items:
                type: object
                properties:
                  _index:
                    type: string
                    description: Index group of the document
                    example: "lta_busservices"
                  _type:
                    type: string
                    description: Content type of the document
                    example: "_doc"
                  _id:
                    type: string
                    description: The hexadecimal value combination of serviceno, operator, direction, category, origincode and destinationcode
                    example: "eff975fc922d4a6738f65ff41f5112040f084162"
                  _score:
                    type: number
                    description: The document score for the search request
                    example: 0
                  _source:
                    type: object
                    example: {<Json Object>}
                    description: Json Object of returned hits
                    properties:
                      serviceno:
                        type: string
                        description: The bus service number
                        example: '325'
                      operator:
                        type: string
                        description: Operator for this bus service
                        example: SBST
                      direction:
                        type: integer
                        description: The direction in which the bus travels (1 or 2), loop services only have 1 direction
                        example: 1
                      category:
                        type: string
                        description: Category of the SBS bus service- EXPRESS, FEEDER, INDUSTRIAL, TOWNLINK, TRUNK, 2 TIER FLAT FEE, FLAT FEE $1.10 (or $1.90, $3.50, $3.80)
                        example: TRUNK
                      origincode:
                        type: string
                        description: Bus stop code for first bus stop
                        example: '64009'
                      destinationcode:
                        type: string
                        description: Bus stop code for last bus stop (similar as first stop for loop services)
                        example: '97009'
                      am_peak_freq:
                        type: string
                        description: Freq of dispatch for AM Off-Peak 0831H - 1659H (range in minutes)
                        example: 10-16
                      am_offpeak_freq:
                        type: string
                        description: Freq of dispatch for AM Peak 0630H - 0830H (range in minutes)
                        example: 14-17
                      pm_peak_freq:
                        type: string
                        description: Freq of dispatch for PM Peak 1700H - 1900H (range in minutes)
                        example: 12-15
                      pm_offpeak_freq:
                        type: string
                        description: Freq of dispatch for PM Off-Peak after 1900H (range in minutes)
                        example: 12-15
                      loopdesc:
                        type : string
                        description: Location at which the bus service loops, empty if not a loop service.
                        example: "Raffles Blvd"
                      lastupdated:
                        type : date
                        description: When the data was lastupdated
                        example: "2022-03-23T20:00:10.648Z"
                      source:
                        type: string
                        description: Dataset source
                        example: lta
                      uniqueid:
                        type: string
                        description: The hexadecimal value combination of serviceno, operator, direction, category, origincode and destinationcode
                        example: "eff975fc922d4a6738f65ff41f5112040f084162"
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties:
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Feb 22, 2022
              x-details: Initial version release
              description: Latest Version
    input:
      type: object
      properties:
        limit:
          type: number
          default: 10
          example: 10
          description: The max records to return for the request. Default - 10, Max - 10000
        offset:
          type: number
          default: 0
          example: 0
          description: The offset of the record list i.e, the starting index
        aggregation:
          type: boolean
          default: false
          example: false
          description: This returns the available bus service number and its corresponding count based on the user input query. Input should be true/false, default is false.
        collapse:
          type: boolean
          default: false
          example: false
          description: If set to True, this returns only the latest records based on lastupdated
        filter:
          type: array
          default: false
          items:
              type: object
          example: [{"match":{"serviceno": "386"}}]
          description: |+
            Its a list of filters to refine the search further. By default it returns first set of 10 latest records. Each filter consists of a match type, the field and the value. The possible match types are&#58;
            * match
            * match_phrase
            * range
            * exists
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header