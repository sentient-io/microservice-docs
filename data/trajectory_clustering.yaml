  openapi: 3.0.1
  info:
    title: Trajectory Clustering
    description: |+
      This Data Analytics microservice groups the input trajectories of objects into clusters based on positions and velocity. A target object can be anything mobile that is continuously tracked or "pinged-back" (e.g. vehicles, mobile phones).</br>
      The clustering algorithm requires a set of trajectories. Each trajectory has a unique id (e.g. t1, t2) and a sequence of 2D points (X-Y coordinates and corresponding timestamps).</br>
      See additional information for relationship of target objects and their trajectories.
    version: '0.1.0'
    x-additionalinfo: |+
      In the ideal case, each trajectory should be mapped exactly to one target object. Due to known limitations of the tracking algorithms, sometimes a single target can have multiple trajectories/tracks. In less common cases of errors, multiple targets are combined into one trajectory/track.
    x-subscribelink: trajectory_clustering
    x-apitype: small file
    x-apitypedescription: |+
      Fast | Single-Call | 10MB/Call
    x-inputfilelimit: |+
      Process up to 10000 kb of data or chat per API call.
    x-responsetime: |+
      Response rate is fast due to small data transfer per call made.
    x-billingmethod: |+
      The API is billed by per request.
    x-notes: |+
      Process up to 10,000 records.
    x-apidetailsdesc: |+
      Group input trajectories of objects into clusters based on positions and velocity.
  servers:
    - url: 'https://apis.sentient.io'
  tags:
  - name: "v0.1.0"
    description: "Published Date - Apr 07, 2021"
  paths:
    /microservices/data/trajectoryclustering/v0/getpredictions:
      post:
        tags:
          - v0.1.0
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/success'
                example: {"message": "Successfully Processed","results": {"0": ["t1","t2"],"1":["t3","t4","t5"]},"status": "Success"}
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/unauthorized'
          '402':
            description: Payment Required
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/paymentrequired'
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/forbidden'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notfound'
          '419':
            description: Input Field Missing
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/inputfieldmissing'
          '413':
            description: Payload Too Large
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/inputlimitexceeded'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/invalidinput'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/servererror'
          '504':
            description: Gateway Timeout
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/gatewaytimeout'
        security:
          - APIAuthorizer: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/input'
          required: true
  components:
    schemas:
      success:
        type: object
        properties: 
          results:
            type: object
            example: { "<Json": "Object>" }
            description: Json Object of returned results
            properties:
              <cluster id>:
                x-name: <cluster id>
                type: array
                example: ["t1","t2"]
                description: Group id where the tracks are being clustered. Values dependent on existing group detected sensitive to training dataset. Cluster -1 is a special cluster of which its members are unassigned. Each value within a cluster contains track id  
          message:
            type: string
            example: Successfully Processed
            description: Description of the API status
          status:
            type: string
            example: Success
            description: The status of the API call - Success/Failure                  
      unauthorized:
        type: object
        properties:
          message:
            type: string
            example: Missing Authentication Token
          status:
            type: string
            example: Failure
      forbidden:
        type: object
        properties:
          message:
            type: string
            example: Access Denied Unauthorized User
          status:
            type: string
            example: Failure
      paymentrequired:
        type: object
        properties:
          message:
            type: string
            example: Insufficient Credits Kindly Top Up
          status:
            type: string
            example: Failure
      notfound:
        type: object
        properties:
          message:
            type: string
            example: Invalid Request URL
          status:
            type: string
            example: Failure
      invalidinput:
        type: object
        properties:
          message:
            type: string
            example: Invalid input - Error in URL.
          status:
            type: string
            example: Failure
      servererror:
        type: object
        properties:
          message:
            type: string
            example: Internal Server Error
          status:
            type: string
            example: Failure
      gatewaytimeout:
        type: object
        properties:
          message:
            type: string
            example: Request Timeout
          status:
            type: string
            example: Failure
      inputfieldmissing:
        type: object
        properties:
          message:
            type: string
            example: Input Field Missing
          status:
            type: string
            example: Failure
      inputlimitexceeded:
        type: object
        properties:
          message:
            type: string
            example: Input Limit Exceeded
          status:
            type: string
            example: Failure 
      versions:
        type: object
        properties:          
          v0.1.0:
           type: array
           items:
            oneOf:
              - type: string
                example: Published Date - Apr 07, 2021
                x-details: Initial version release    
                description: Lastest Version
      input:
        type: object
        required:
          - trajectories
        properties:
          trajectories:
            x-name: trajectories
            type: array
            default: true
            example: [
                {"tid": "t1", "time": "2021-01-01T18:19:40.863000Z", "x": 360, "y": 851},
                 {"tid": "t1", "time": "2021-01-01T18:19:41.863000Z", "x": 361, "y": 852},
                 {"tid": "t1", "time": "2021-01-01T18:19:42.863000Z", "x": 362, "y": 853},
                 {"tid": "t1", "time": "2021-01-01T18:19:40.863000Z", "x": 370, "y": 859},
                 {"tid": "t2", "time": "2021-01-01T18:19:41.863000Z", "x": 369, "y": 858},
                 {"tid": "t2", "time": "2021-01-01T18:19:42.863000Z", "x": 368, "y": 857},
                 {"tid": "t2", "time": "2021-01-01T18:19:43.863000Z", "x": 367, "y": 856},
                 {"tid": "t3",   "time": "2021-01-01T18:40:20.171000Z",  "x": 321, "y": 888},
                 {"tid": "t3",   "time": "2021-01-01T18:40:22.171000Z",  "x": 331, "y": 888},
                 {"tid": "t3",   "time": "2021-01-01T18:40:24.171000Z",  "x": 341, "y": 888},
                 {"tid": "t3",   "time": "2021-01-01T18:40:26.171000Z",  "x": 351, "y": 888},
                 {"tid": "t3",   "time": "2021-01-01T18:40:28.171000Z",  "x": 361, "y": 888},
                 {"tid": "t3",   "time": "2021-01-01T18:40:30.171000Z",  "x": 371, "y": 888},
                 {"tid": "t3",   "time": "2021-01-01T18:40:32.171000Z",  "x": 381, "y": 888},
                 {"tid": "t3",   "time": "2021-01-01T18:40:34.171000Z",  "x": 391, "y": 888},
                 {"tid": "t4",   "time": "2021-01-01T18:40:20.171000Z",  "x": 322, "y": 883},
                 {"tid": "t4",   "time": "2021-01-01T18:40:24.171000Z",  "x": 342, "y": 883},
                 {"tid": "t4",   "time": "2021-01-01T18:40:26.171000Z",  "x": 352, "y": 883},
                 {"tid": "t4",   "time": "2021-01-01T18:40:28.171000Z",  "x": 362, "y": 883},
                 {"tid": "t4",   "time": "2021-01-01T18:40:30.171000Z",  "x": 372, "y": 883},
                 {"tid": "t4",   "time": "2021-01-01T18:40:32.171000Z",  "x": 382, "y": 883},
                 {"tid": "t4",   "time": "2021-01-01T18:40:34.171000Z",  "x": 392, "y": 883},
                 {"tid": "t5",   "time": "2021-01-01T18:40:24.171000Z",  "x": 342, "y": 883},
                 {"tid": "t5",   "time": "2021-01-01T18:40:28.171000Z",  "x": 362, "y": 883},
                 {"tid": "t5",   "time": "2021-01-01T18:40:30.171000Z",  "x": 372, "y": 883},
                 {"tid": "t5",   "time": "2021-01-01T18:40:34.171000Z",  "x": 392, "y": 883}
              ]
            description: |+
              List of trajectory dictionary
            items:
              oneOf:
                - type: object
                  properties:
                    tid:
                      x-name: tid
                      type: integer
                      format: int32
                      default: false
                      example: 61568
                      description: |+
                        Unique ID for each trajectory or trip
                    time:
                      x-name: time
                      type: string
                      default: false
                      example: 2020-07-07T18:19:54.362000Z
                      description: |+
                        Timestamp when the location is recorded. In Date.toJSON() format. E.g. 2012-04-23T18:25:43.511Z
                    x:
                      x-name: x
                      type: integer
                      format: int32
                      default: false
                      example: 888
                      description: |+
                        2D Location coordinates in X,Y
                    y:
                      x-name: "y"
                      type: integer
                      format: int32
                      default: false
                      example: 2463
                      description: |+
                        2D Location coordinates in X,Y
    securitySchemes:
      APIAuthorizer:
        type: apiKey
        name: x-api-key
        in: header
        x-amazon-apigateway-authtype: custom
        description: Authentication is done using the x-api-key in the request header
