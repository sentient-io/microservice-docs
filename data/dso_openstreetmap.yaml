openapi: 3.0.1
info:
  title: OpenStreet Map
  x-subscribelink: openstreetmap
  description: |+
      Returns information on the map data across Singapore which are available in OpenStreetMap, including: coordinates, type and the details of the location.
      This microservice contains information from https://www.openstreetmap.org/ which is an open source.

  x-additionalinfo : |+
    By default standard analyzer in Elasticsearch will remove special characters excluding the opening and closing braces, so when passing query with any special characters mostly it will not be able to search since analyzer already removed those. So it is always advised to do the search on the analyzed terms.

    **Match Types:**
    A match type is a match operator. The supported match types are&#58;
    * **match_phrase** - Search within a full text field and returns all the documents having "stn" in description field
      > {"match_phrase":{"properties.name":"Orchard Road"}}
    * **match** - Search within a full text field for a single word
      > {"match":{"properties.name":"Orchard"}}
      > {"match":{"properties.highway": "primary"}}
      > {"match":{"country":"singapore"}}
      > {"match":{"country_code":"sg"}}

    **Regular Expression:**
    * **regexp** - Search based on the pattern of the regular expression given. Eg, "Expressway" can be passed as "Express.*" or ".*pressway". This returns all the documents containing "Express" or "pressway".
      > {"regexp":{"properties.name":"motorway.*"}}
      > {"regexp":{"properties.name":".*kim"}},{"regexp":{"properties.name":"keat.*"}}
      the above query will return document containing both the above mentioned pattern.

    * **range** - Returns results that contain terms within a stipulated range
      > {"range":{"properties.lastupdated":{"lte":"now/d"}}}
    * **exists** - Returns results that contain any indexed value for a field
      > {"exists":{"field":"properties.name"}}

    **Geo Queries:**
    * **geo_distance** - Returns the geo search based on the distance and location (lat,long)
      > {"geo_distance": {"distance": "1km","geometry": {"lat": 1.350502002800305,"lon": 103.75806046132564}}}
    * **geo_shape** - Returns results based on the coordinates and the type of the geometry along with the spatial relations. The spatial relations consists of 4 types
                      1. INTERSECTS - (default) Return all documents whose shape field intersects the query geometry.
                      2. DISJOINT - Return all documents whose shape field has nothing in common with the query geometry.
                      3. WITHIN - Return all documents whose shape field is within the query geometry.
                      4. CONTAINS - Return all documents whose shape field contains the query geometry.
      > {"geo_shape": {"geometry": {"shape": {"type": "Point","coordinates":[103.7771716, 1.434577]},"relation": "CONTAINS"}}}

        **Special Characters:**
        
    |      The escape characters are as follows      |    + - = && \|\| > < ! ( ) { } [ ] ^ " ~ * ? : \ /   |
    |--------------------------------------------------- |------------------------------------------------------|

    * < > ( ) { } [ ]   all these braces if used need to be closed.

    * \+ \- = && ! ^ ' " ~ ? : \ / <> () {} [] all these are regexp operators will be replaced in analyzed terms. Special characters that can be used in regular expression are explained below.


    |      Characters      |      Description      |
    |----------------- |------------------------------------------------------|
    |      .     |    any character.   |
    |      \*      |    it tells the computer to match the preceding character (or set of characters) for 0 or more times (upto infinite). Eg: The regular expression ab*c will give ac, abc, abbc, abbbcâ€¦.and so on.     |
    |      *, +, and { }      |    these symbols act as repeaters and tell the computer that the preceding character is to be used for more than just one time.     |
    |      +      |    it tells the computer to repeat the preceding character (or set of characters) at atleast one or more times(up to infinite).   |
    |      ?      |    this symbol tells the computer that the preceding character may or may not be present in the string to be matched.   |
    |      [set_of_characters]      |    matches any single character in set_of_characters. By default, the match is case-sensitive.   |
    |      [^set_of_characters]      |    matches any single character that is not in set_of_characters. By default, the match is case-sensitive. Example: [^abc] will match any character except a,b,c.    |
    |      (\|)      |    matches any one element separated by the vertical bar (|) character. Eg: Example :  th(e|is|at) will match words - the, this and that.    |
    |      <>      |    range of values - Takes integers range as input and returns the output. Eg: <22-50> - This returns the data of the particular field in the specified range.    |
    |      {}      |    no of occurrences - Takes integer as input and returns the output. Eg: east{1}.* - This will return the documents containing "east" with atleast one occurance.    |
    |      ()      |    exact match word - Similar to normal search it will check for the same word given by the user. Eg: (jurong)   |
    |      []      |    match each character - This will match each character from the square bracket. Eg: [abcd] - This returns the data matching any one character at word start.    |

    **Special Queries:**	
      > {"properties.name":.*[jk]urong.*"}
      This query will return documents matching "jurong" or "kurong".
      > {"properties.name": [jk][ua](rong){1}}
      This query will check for all the occurances matching characters from the sqaure brackets and check for alteast one occurance of the word, (i.e) it will check for "jurong", "jarong", "kurong", "karong".
      > {properties.name":(jurong|bahasa)}
      This query will return documents containing exact word "jurong" or "bahasa".


  version: '0.1.0'
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 10MB/Call
  x-inputfilelimit: |+
    Process up to 10000 kb of data or chat per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by per request.
  x-notes: |+
    Process up to 10,000 records.
  x-apidetailsdesc: |+
    Provides detailed information for all bus stops currently being serviced by buses.
servers:
        - url: 'https://apish.sentient.io'
tags:
- name: "v0.1.0"
  description: "Published Date - May 26, 2022"
paths:
  /microservices/data/tsdsoopenstreetmap/v1/getdata:
    post:
      tags:
        - v0.1.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                message: Successfully Processed
                results:
                  search_result:
                    hits:
                    - _id: '74518784'
                      _index: osm_index
                      _score: 0
                      _source:
                        country: singapore
                        country_code: SG
                        geometry:
                          coordinates:
                          - - 103.9058209
                            - 1.3152874
                          - - 103.9055659
                            - 1.3159403
                          type: LineString
                        properties:
                          highway: trunk
                          name: Still Road
                          osm_id: '74518784'
                          other_tags: '{"lanes":"3","maxspeed":"60","oneway":"yes","surface":"asphalt"}'
                          z_order: 8
                        type: Feature
                      _type: _doc
                    max_score: 0
                    total:
                      relation: eq
                      value: 1
                status: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      type: object
      properties:
        message:
          type: string
          example: Successfully Processed
          description: The detail description on the status
        status:
          type: string
          example: Success
          description: The status of the API call Success/Failure
        results:
          type: object
          example: {<Json Object>}
          description: Json Object of returned results
          properties:
            total:
              type: integer
              example: 1
              description: Total number of records
            relation:
              type: text
              example: eq
              description: Indicates the accuracy of the total number of records (e.g. "eq" means equals)
            max_score:
              type: number
              example: 0
              description: The highest score value
            hits:
              type: array
              example: [{<JSON result Object>}]
              description: The list of Json result object
              items:
                type: object
                properties:
                  _index:
                    type: string
                    description: Index group of the document
                    example: "osm_index"
                  _type:
                    type: string
                    description: Content type of the document
                    example: "_doc"
                  _id:
                    type: string
                    description: Unique number to avoid duplications and replacements in the data. This is default value provided by OSM.
                    example: "kjo9xH8BBs9t6Uj6LQ5O"
                  _score:
                    type: number
                    description: The document score for the search request
                    example: 0
                  _source:
                    type: object
                    example: {<Json Object>}
                    description: Json Object of returned hits
                    properties:
                      country:
                        type: string
                        description: Country name.
                        example: singapore
                      country_code:
                        type: string
                        description: 2 letter country code.
                        example: SG
                      geometry:
                        type: geo_shape
                        description: Location coordinates and its type
                        example: {"type": "LineString", "coordinates": [[103.8300615, 1.3060184], [103.8301117, 1.3059917]]}
                      properties:
                        type: object
                        description: Contains all the details of the location in key-value pairs.
                        example: {"osm_id": "14061945", "name": "Central Expressway", "highway": "motorway", "waterway": "N/A", "aerialway": "N/A", "barrier": "N/A", "man_made": "N/A", "other_tags": "{\"lanes\":\"4\",\"maxspeed\":\"80\",\"oneway\":\"yes\",\"ref\":\"CTE\",\"surface\":\"asphalt\"}", "source": "osm", "lastupdated": "2022-03-24T16:38:03.322Z"}
                      type:
                        type: string
                        description: Type of the document
                        example: "Feature"
                      lastupdated:
                        type: string
                        description: Record last updated date on sentient
                        example: "2022-02-18T00:23:43.914Z"
                      source:
                        type: string
                        description: Dataset source
                        example: osm
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties:
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - May 26, 2022
              x-details: Initial version release
              description: Latest Version
    input:
      type: object
      properties:
        limit:
          type: number
          default: false
          example: 10
          description: The max records to return for the request. Default - 0, Max - 10000
        offset:
          type: number
          default: false
          example: 0
          description: The offset of the record list ie the starting index.
        filter:
          type: array
          default: false
          items:
              type: object
          example: [{"match_phrase":{"properties.name":"Orchard Road"}}]
          description: |+
            Its a list of filters to refine the search further. Default it returns the today's latest record. Each filter consists of a match type, the field and the value. The possible match types are&#58;
            * match
            * match_phrase
            * range
            * exists
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header