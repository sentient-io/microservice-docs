openapi: 3.0.1
info:
  title: HDB Commercial Directories (SG)
  x-subscribelink: commercial_directories_hdb_sg
  description: |+
   This Data microservice retrieves the list of all retail shops within Housing Development Board (HDB) and allows you to search for a shop by its name, address, building name, postal code, latitude and longitude coordinates and type of business. The returned dataset offers useful information like the shop operating hours and contact number. Updated weekly. 
   The HDB POTH programme makes selected public and non-public datasets available to developers and companies to improve their service offerings to benefit the lives of Singapore citizens. Sentient.io is proud to partner with HDB to manage and facilitate the sharing of data for the POTH Programme.
   
   **Note:** As this microservice uses the GET method, developers using this microservice must remember to have their app encode all the input values to be URL friendly (i.e. all spaces and special characters must be replaced). Here’s a reference on [URL encoding](https://www.w3schools.com/tags/ref_urlencode.ASP).
       
  x-additionalinfo : |+
      Suggested Use Cases:
      - Build a resident community mobile app with e-commerce collection and estate directory features. To illustrate, the app can:
        Name retail shops in HDBs based on their GPS location.
      
      **Refining queries in the filterdata field using filter types and match types**
      
      The filterdata fields use elasticsearch’s syntax (specifically filter types and match types) to help further refine search results and provide greater flexibility in structuring more sophisticated queries. 
      
      **Filter Types:**
      
      A filter type is a logic operator to which the search results must fulfill certain logical conditions to be returned. The supported match types are&#58;
      * **must** - All of the stated conditions must match. Equivalent to an AND operator.
        > {"must":[{"match_phrase":{"name":"ang mo kio"}}]}
      * **must_not** - All of the stated conditions must not match. Equivalent to a NOT operator.
      
        > {"must_not":[{"match":{"trade":"shop"}}]}
      * **should** - At least one of the stated conditions should match. Equivalent to an OR operator. 
      
        > {"should":[{"match":{"postalcode":650633}}]}
      * **filter** - All of the stated conditions that must match. However, results are not scored unlike the other filter types which returns results based on how well the conditions are met.
        
        > {"filter":[{"match":{"trade":"retail"}}]}
      For a more detailed guide on filter types, [refer to this](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/query-dsl-bool-query.html).
      Filter types cannot be used alone and must be used in conjunction with a match type to complete the query.
      
      **Match Types:**
      
      A match type is a match operator nested within a filter type that fine-tunes the matching condition of the text search. The supported match types are&#58;
      * **match** - Search within a full text field for a single word
        > {"match":{"street":"bishan"}}
      * **match_phrase** - Search within a full text field
        > {"match_phrase":{ "street":bishan street 24"}}
      * **match_phrase_prefix** - Search within a full text field with prefix
        > {"match_phrase_prefix":{"street":"bishan street"}}
      * **term** - Returns results that contain an exact term in a provided field
        > {"term":{"postalcode":560720}}
      * **terms** - Returns results that contain one or more exact terms in a provided field
        > {"terms":{"postalcode":[560720,560721]}}
        
      * **range** - Returns results that contain terms within a stipulated range
      
        > {"range":{"postalcode":{"lte":650347}}}
        > {"range":{"postalcode":{"gte":650347}}}
        > {"range":{"postalcode":{"gte":650347,"lte":760415}}}
        
      * **exists** - Returns results that contain any indexed value for a field
      
        > {"exists":{ "field": "postalcode"}}
  
      For a more detailed guide to match types, [refer to this](https://www.elastic.co/guide/en/elasticsearch/reference/7.9/term-level-queries.html).
      **Forming sophisticated queries using combinations of filter types (in JSON)**
      Multiple filter types can be combined together in one query (written in JSON format) to form a very sophisticated query. Here’s one example below&#58;
      > {
      > "must":[{"match_phrase":{"street":"ang mo kio avenue 6"}}],
      > "filter":[{"match":{"trade":"shop"}}],
      > "should":[{"match":{"postalcode":650633}}],
      > "must_not":[{"match":{"trade":"betting"}}]
      > }
      **Sample Queries Based on Use Cases**
    
      1. **Search for all commercial directories around ang mo kio street 21**
         Using a querystring only&#58;
         > querystring = "ang mo kio street 21"
      2. **Search for all commercial directories within a 1KM radius from Tampines Mall**
         Using a filterdata only&#58;
         > filterdata = {"filter":[{"geo_distance": {"distance": "1km","location": "1.3525,103.9447"}}]}
         
      3. **Search for all cake shop shops at Blk 122, Bukit Merah Lane 1**
         Using a filterdata only&#58;
         
         > filterdata = {"filter":[{"match_phrase": {"trade":"cake shop"}},{"match": {"block":"122"}},{"match_phrase": {"street":"bukit merah lane 1"}}]}
  
  version: '1.1.0'
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 10MB/Call
  x-inputfilelimit: |+
    Process up to 10000 kb of data or chat per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by the amount of data transferred.
  x-notes: |+
    Process up to 10,000 records.
  x-apidetailsdesc: |+
    Retrieves the list of all retail shops within Housing Development Board.   
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v1.1.0"
  description: "Published Date - Jul 13, 2022"
paths:
   /microservices/data/hdb_searchdir/v1/getdata:
    get:
      tags:
        - v1.1.0
      parameters:
        - in: query
          name: querystring
          schema:
            type: string
          description: |+
            Simple keyword search for matches in all searchable fields. Keywords separated by spaces will return results containing any of those keywords. For exact phrase match, put entire phrase in double quotes (" ").
            
            If this field is set to null, by default the microservice will return all retail shops (within the stated limit), which can be further refined through the filterdata field for more sophisticated queries.
            
          example: "school"
          default: false
        - in: query
          name: offset
          schema:
            type: integer
          description: The offset of the record list ie the starting index
          example: "0"
          default: false
        - in: query
          name: limit
          schema:
            type: integer
          description: The max records to return for the request. Default - 10, Max - 10000
          example: "10"
          default: false
        - in: query
          name: filterdata
          schema:
            type: string
          description: |+
            Refine the search further on any of the possible through the 4 filter types &#58;
            * must
            * must_not
            * should
            * filter
          default: false
          example: |+
              {"must":[{"match_phrase":{"name":"school"}}],"filter":[{"match":{"trade":"schools & centres"}}],"should":[{"match":{"postalcode":530202}}],"must_not":[{"match":{"trade":"betting"}}]}
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                results:
                  total: 3735
                  max_score: 17.995623
                  hits:
                  - _index: sentient_hdb_directory_index
                    _type: dir_doc
                    _id: pet_specialist
                    _score: 1.0
                    _source:
                      postalcode: 560720
                      unit: '4102'
                      level: '01'
                      source: hdb
                      name: pet_specialist
                      phonenumber: 63553000
                      email: ''
                      operatinghours: mon - fri  8am - 4.30pm  sat  8am - 12.30pm
                      trade: pets
                      lastupdated: '2019-02-01'
                      type: shop
                      block: '720'
                      street: ang mo kio avenue 6
                      xcoord: 29520.58
                      ycoord: 39311.68
                      location:
                        lat: 1.37179535
                        lon: 103.8469821
                  message: Successfully Processed
                  status: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'    
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
components:
  schemas:
    success:
      type: object
      properties:
        results:
          type: object
          example: {<Json Object>}
          description: Json Object of returned results          
          properties:
            total:
              type: integer
              format: int32
              example: 986
              description: Total number of records
            max_score:
              type: number
              format: float
              example: 1.0
              description: The highest score value
            hits:
              type: array
              example: [{<JSON result Object}]
              description: The list of Json result object              
              items:
                type: object
                properties:
                  _index:
                    type: string
                    description: Index group of the document
                    example: "sentient_directory_hdb_index"
                  _type: 
                    type: string
                    description: Content type of the document
                    example: "dir_doc"
                  _id: 
                    type: string
                    description: Document ID
                    example: "pet_specialist"
                  _score: 
                    type: number
                    format: float
                    description: The document score for the search request
                    example: 1.0
                  _source: 
                    type: object
                    example: {<Json Object>}
                    description: Json Object of returned hits                  
                    properties:
                            id: 
                              type: string
                              description: Unique Id
                              example: "pet_specialist"
                            postalcode: 
                              type: integer
                              format: int32
                              description: Postal code of a block
                              example: 560720
                            unit: 
                              type: integer
                              format: int32
                              description: Unit number
                              example: "4102"
                            level: 
                              type: integer
                              format: int32
                              description: Floor level
                              example: "01"
                            source: 
                              type: string
                              description: Dataset source
                              example: "hdb"
                            name: 
                              type: string
                              description: Business name
                              example: "Pets"
                            phonenumber:
                              type: integer
                              format: int32
                              description: Contact number
                              example: "63553000"
                            email:
                              type: string
                              description: Email address
                              example: "amk128@renalteam.org"
                            operatinghours:
                              type: string
                              description: Business operating hours. Multiple values are separated using ‘;’
                              example: "mon - fri  8am - 4.30pm  sat  8am - 12.30pm"
                            trade:
                              type: string
                              description: |+
                                Business trade type. Trade List are&#58;
                                commercial school
                                shop/retail
                                childcare centre
                                confectionery
                                office
                                betting
                                eating house/fast food restaurant/food court
                                family restaurant
                                health centre and amusement ctr
                                laundry shop
                                showroom
                                pet shop
                                social com
                                supermarket
                                specific use
                                health & fitness
                                home
                                fashion & accessories
                                groceries
                                schools & centres
                                business
                                pets
                                dining
                                food products
                                beauty
                                cake shop
                                shopping
                                finance
                                entertainment & leisure
                                hobbies & interests
                                travel and tourism
                                light industrial
                                sports and recreation building
                                others
                              example: "shop/retail"
                            lastupdated:
                              type: string
                              format: date
                              description: Record created date
                              example: "2019-02-01"
                            type:
                              type: string
                              description: Record type
                              example: "shop"
                            block:
                              type: integer
                              format: int
                              description: Block number
                              example: "720"
                            street:
                              type: string
                              description: Full street name
                              example: "ang mo kio avenue 6"
                            xcoord:
                              type: number
                              format: float
                              description: SVY21 X coordinates (Note, SVY21 is a localised plane coordinate system used specifically by Singapore. For global GPS lat/long coordinates, refer to "location" object)
                              example: 29520.58
                            ycoord:
                              type: number
                              format: float
                              description: SVY21 Y coordinates (Note, SVY21 is a localised plane coordinate system used specifically by Singapore. For global GPS lat/long coordinates, refer to "location" object)
                              example: 39311.68
                            location:
                              type: object
                              description: WGS84 coordinates lat/long
                              example: {"lat":1.364299477060462,"lon":103.8350609414261}                            
                              properties:
                                  lat: 
                                    type: number
                                    format: float
                                    description: Latitude in the WGS84 coordinate format
                                    example: 1.37179535
                                  lon:
                                    type: number
                                    format: float 
                                    description: Longitude in the WGS84 coordinate format
                                    example: 103.8469821
        message:
          type: string
          example: Successfully Processed
          description: Description of the API status.
        status:
          type: string
          example: Success
          description: The status of the API call - success/failure.
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure  
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties:
        v1.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Jul 13,2022
              x-details: Optimized release
              description: Latest Version
        v1.0.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - May 21,2021
              x-details: Optimized release
              description: Older Version
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Dec 26,2018
              x-details: Initial version release
              description: Archived
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header.
