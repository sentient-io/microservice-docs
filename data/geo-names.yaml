openapi: 3.0.1
info:
  title: Geo Names
  x-subscribelink: geo_names
  description: |+
      The GeoNames geographical database contains over 12 million records. GeoNames is integrating geographical data such as names of places in various languages, elevation, population and others from various sources. All lat/long coordinates are in WGS84.
  x-additionalinfo : |+
    **Match Types:**
    A match type is a match operator. The supported match types are&#58;
    * **match_phrase** - Search within a full text field and returns all the documents having "stn" in description field 
      > {"match_phrase":{"name": "Pic de Font Blanca"}}   
      > {"match_phrase":{"asciiname": "Taj Mahal"}}
      > {"match_phrase":{"alternatenames": "Sapoá River"}}
    * **match** - Search within a full text field for a single word
      > {"match":{"name": ""Yuki""}}
      > {"match":{"asciiname": "vote"}}
      > {"match":{"alternatenames": "river"}}
      > {"match":{"country_name": "singapore"}}
    * **exists** - Returns results that contain any indexed value for a field
      > {"exists":{"field":"location"}}

    **Geo Queries:**
    * **geo_distance** - Returns the geo search based on the distance and location (lat,long)
      > {"geo_distance": {"distance": "1km","geometry": {"lat": 42.64991,"lon": 1.53335}}}

    **Pagination with scroll_id:** - We face a major issue of handling the hits, i.e., whenever the hits returned are more than 10,000 hits Elasticsearch will only return till 10k hits. For query more than 10K records scroll id need to add in scroll_id space as below.
      > FGluY2x1ZGVfY29udGV4dF91.....QbmVUTHlMMjRqREpvZkhMUQ==
      
  version: '0.1.0'
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 10MB/Call
  x-inputfilelimit: |+
    Process up to 10000 kb of data or chat per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+ 
    The API is billed by per request.
  x-notes: |+
    Process up to 10,000 records.
  x-apidetailsdesc: |+
    Provides the details for the location. 
servers:
  - url: 'http://168.177.101.39:30015' 
tags:
- name: "v0.1.0"
  description: "Published Date - Sept 26, 2022"
paths:
  /microservices/data/geonames/v0/getdata:
    post:
      tags:
        - v0.1.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                message: Successfully Processed
                results:
                  scroll_id: FGluY2x1ZGVfY29udGV4dF91.....QbmVUTHlMMjRqREpvZkhMUQ==
                  search_result:
                    hits:
                    - _index: geo-names
                      _type: _doc
                      _id: agOLFoMB5vFgYJ1BnXcZ
                      _score: 1
                      _source:
                        admin1_code: '01'
                        admin2_code: NA
                        admin3_code: NA
                        admin4_code: NA
                        alternatenames: Kolodec Mychan,Kolodets Mychan,Колодец Мычан
                        asciiname: Kolodets Mychan
                        cc2: NA
                        country_code: TM
                        country_name: Turkmenistan
                        dem: '148'
                        elevation: NA
                        feature_class: H
                        feature_code: WLL
                        geonameid: '11249652'
                        lastupdated: '2022-09-06T11:16:04.062Z'
                        location:
                          lat: '37.8284'
                          lon: '59.9982'
                        modification_date: '2016-09-10'
                        name: Kolodets Mychan
                        population: '0'
                        timezone: Asia/Ashgabat
                    max_score: 1
                    total:
                      value: 10000
                      relation: gte
                status: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      type: object
      properties:
        message:
          type: string
          example: Successfully Processed
          description: The detail description on the status
        status:
          type: string
          example: Success
          description: The status of the API call Success/Failure
        scroll_id:
          type: string
          example: FGluY2x1ZGVfY29udGV4dF91.....QbmVUTHlMMjRqREpvZkhMUQ==             
        results:
          type: object
          example: {<Json Object>}
          description: Json Object of returned results
          properties:
            total:
              type: integer
              example: 1
              description: Total number of records
            relation:
              type: string
              example: eq
              description: Indicates the accuracy of the total number of records (e.g. "eq" means equals, "gte" means greater than)
            max_score:
              type: number
              example: 1
              description: The highest score value
            hits:
              type: array
              example: [{<JSON result Object>}]
              description: The list of Json result object
              items:
                type: object
                properties:
                  _index:
                    type: string
                    description: Index group of the document
                    example: "geo-names"
                  _type: 
                    type: string
                    description: Content type of the document
                    example: "_doc"
                  _id: 
                    type: string
                    description: The random string value assigned to each document after indexing.
                    example: "oXj1pYIB5CHXrx16V9DG"
                  _score: 
                    type: number
                    description: The document score for the search request
                    example: 1
                  _source: 
                    type: object
                    example: {<Json Object>}
                    description: Json Object of returned hits
                    properties:
                      geonameid:
                        type: string
                        description: integer id of record in geonames database.
                        example: "11249652"
                      name:
                        type: string
                        description: name of geographical point (utf8).
                        example: "Kolodets Mychan"
                      asciiname:
                        type: string
                        description: name of geographical point in plain ascii characters.
                        example: "Kolodets Mychan"
                      alternatenames:
                        type: string
                        description: alternatenames, comma separated, ascii names automatically transliterated, convenience attribute from alternatename table.
                        example: "Kolodec Mychan,Kolodets Mychan,Колодец Мычан"
                      feature_class:
                        type: string
                        description: see http://www.geonames.org/export/codes.html, char(1).
                        example: "H"
                      feature_code:
                        type: string
                        description: see http://www.geonames.org/export/codes.html.
                        example: "WLL"
                      country_code:
                        type: string
                        description: ISO-3166 2-letter country code, 2 characters.
                        example: "TM"
                      cc2:
                        type: string
                        description: alternate country codes, comma separated, ISO-3166 2-letter country code, 200 characters. "NA" if value not available.
                        example: "NA"
                      admin1_code:
                        type: string
                        description: fipscode (subject to change to iso code). "NA" if value not available.
                        example: "01"
                      admin2_code:
                        type: string
                        description: code for the second administrative division, a county in the respective country. "NA" if value not available.
                        example: "NA"
                      admin3_code:
                        type: string
                        description: code for third level administrative division. "NA" if value not available.
                        example: "NA"
                      admin4_code:
                        type: string
                        description: code for fourth level administrative division. "NA" if value not available.
                        example: "NA"
                      population:
                        type: string
                        description: population count. "NA" if value not available.
                        example: "0"
                      elevation:
                        type: string
                        description: elevation in meters, integer. "NA" if value not available.
                        example: "NA"
                      dem:
                        type: string
                        description: digital elevation model, srtm3 or gtopo30, average elevation of 3"x3" (ca 90mx90m) or 30"x30" (ca 900mx900m) area in meters, integer. srtm processed by cgiar/ciat.
                        example: "148"
                      timezone:
                        type: string
                        description: the iana timezone id.
                        example: "Asia/Ashgabat"
                      modification_date:
                        type: string
                        description: date of last modification in yyyy-MM-dd format.
                        example: "2016-09-10"
                      country_name:
                        type: string
                        description: name of the country.
                        example:  "Turkmenistan"
                      lastupdated:
                        type: string
                        description: record last updated date on sentient.
                        example: "2022-09-06T11:16:04.062Z"
                      location:
                        type: object
                        properties:
                          lat:
                            type: string
                            example: 37.8284
                            description: Latitude value.                            
                          lon:
                            type: string
                            example: 59.9982
                            description: Longitude value.
                        description: latitude and longitude coordinates in decimal degrees
                        example: {<Json Object>}
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties: 
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Sept 26, 2022
              x-details: Initial version release
              description: Latest Version
    input:
      type: object
      properties:
        limit:
          type: number
          default: false
          example: 10
          description: The max records to return for the request. Default - 0, Max - 10000
        offset:
          type: number
          default: false
          example: 0
          description: The offset of the record list ie the starting index 
        scroll_id:
          type: string
          default: 
          example:
          description: If the total number of returned document is greater than 10,000, then you will need to use this scroll id to retreive the remaining records. Note that you will get the scroll id when you do the first search. The maximum amount of documents returned at once is 10,000.
        filter:
          type: array
          default: false
          items:
              type: object
          example: [{"match" :{"country_name": "Singapore"}}]
          description: |+
            Its a list of filters to refine the search further. Each filter consists of a match type, the field and the value. The possible match types are&#58;
            * match
            * match_phrase
            * exists
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
