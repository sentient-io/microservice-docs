openapi: 3.0.1
info:
  title: HDB Shelters Locations (SG)
  x-subscribelink: amenities_shelters_hdb_sg
  description: |+
   This Data microservice returns the indicative outline of shelters for all Housing Development Board (HDB) Towns and Estates and only on HDB Land. The features were identified visually from a high definition ortho-rectified aerial imagery and manually digitised. The imagery was obtained from SLA (captured in 2014). Objects largely obstructed by trees, structures and / or shadow are likely not captured in this dataset. The outlines of partially obstructed objects were extrapolated where possible and may not fully represent the actual shape of the actual object. Precinct Pavilions are not included in this microservice.
   A successful call will return a pre-signed URL where the entire dataset can be downloaded as a CSV file.
   The HDB POTH programme makes selected public and non-public datasets available to developers and companies to improve their service offerings to benefit the lives of Singapore citizens. Sentient.io is proud to partner with HDB to manage and facilitate the sharing of data for the POTH Programme.
  x-additionalinfo: |+
    Suggested Use Cases:
    - Real estate services - can be used as a solution to extract information related to the types and number of shelters present for people buying or renting a HDB home.
    - Property background checks - can be used as a background check service for retail shops owners looking to set up their shops in HDBs, as areas with shelters may induce the likelihood of more customers.
    - Can also be used as a solution to improve user awareness and personalization - for example, a weather app can refer a user to the nearest HDB shelter in the case of a rainy day.
    
    Download the complete dataset using a pre-signed URL. It's a two steps process
   
    **Step 1:**  Get the pre-signed URL 
    
    Replace the correct x-api-key, and API endpoint
    
    > **curl -X GET -H "Content-Type: application/json" -H "x-api-key:XXXXX" <\<API Endpoint>>**
    
    **Step 2:**  Download file 
    
    Using the results.url (i.e) the pre-signed URL to download the dataset
    
    > **curl --request GET "results.url" >> "FILE_NAME"**
    
    **Data schema**
    
    | Name  |  Type |  Size | Description  |
    |---|---|---|---|---|
    |  FEATID | Integer  |  N/A |  Feature ID. Unique running number. |
    |  TYPE |  Char | N/A	  | Captures the type of object.  |
    |  LVL |  Char | N/A	  | Captures whether the object is located at Ground level or Above Ground level.  |
    |  QUALITY |  Char | N/A	  | Captures whether the section of the feature was Fully Visible or Partially Visible.  |
    |  INC_CRC |  Varchar | 50	  | Sub Location Id  |
    |  FMEL_UPD_D |  Datetime | N/A	  | Area of the feature  |
    |  Shape__Area |  Float | N/A	  | Area of the feature  |
    |  Shape__Length |  Float | N/A	  | Length of the feature  |
  version: '1.0.0'
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 20MB/Call
  x-inputfilelimit: |+
    Process up to xxx kb of data or chat per API call.
  x-responsetime: |+
    The response rate is slower than the small file API due to large data
  x-billingmethod: |+
    The API is billed by the amount of data transferred.
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v1.0.0"
  description: "Published Date - Apr 15, 2021"
paths:
   /microservices/data/shelter/v1/getdata:
    get:
      tags:
        - v1.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                results:
                  url: "<pre-signed URL>"
                status: Success
                message: Successfully Processed
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'    
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
components:
  schemas:
    success:
      type: object
      properties:
          results:
            type: object
            example: { "<Json": "Object>" }
            description: Json Object of returned results
            properties:
              url: 
                type: string
                description: pre-signed URL to download the file
                example: "<pre-signed URL>"
          status:
            type: string
            example: Success
            description: The status of the API call. success/failure
          message:
            type: string
            example: Successfully Processed
            description: Detail description on the api status
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties:
        v1.0.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Apr 15, 2021
              description: Optimized release
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Mar 24, 2020
              description: Initial version release
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header.
