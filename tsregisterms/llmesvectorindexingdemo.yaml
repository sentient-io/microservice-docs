openapi: 3.0.1
info:
  description: 'The LLM Media API allows users to query content from the indexed data efficiently, providing relevant information based on input queries.'
  title: LLM Media API
  version: v1.0.0

servers:
  - url: https://apis.sentient.io
    description: Sentient API Server for LLM Media
  - url: https://platform-apis-file-mgmt.sentient.io
    description: Sentient API Server for File Management

components:
  schemas:
    get-messageinput:
      type: object
      properties:
        index_name:
          description: Name of ES index
          example: llm_chatbot_en
          type: string
        text:
          description: User query to search in the index
          example: Does PropNex have any awards?
          type: string
      required:
        - index_name
        - text

    success:
      type: object
      properties:
        message:
          description: Description of the API status
          example: Successfully Processed
          type: string
        results: {}
        status:
          description: The status of the API call - success/failure
          example: success
          type: string

    unauthorized:
      type: object
      properties:
        message:
          example: Missing Authentication Token
          type: string
        status:
          example: Failure
          type: string

    forbidden:
      type: object
      properties:
        message:
          example: Access Denied Unauthorized User
          type: string
        status:
          example: Failure
          type: string

    servererror:
      type: object
      properties:
        message:
          example: Internal Server Error
          type: string
        status:
          example: Failure
          type: string

  securitySchemes:
    APIAuthorizer:
      description: Authentication is done using the x-api-key in the request header
      in: header
      name: x-api-key
      type: apiKey
      x-amazon-apigateway-authtype: custom

paths:
  /microservices/nlp/llmmedia/v1/get-message:
    post:
      description: Processes user questions by querying the vector database for relevant information.<br>
        **Note - Please select the server https://apis.sentient.io**
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get-messageinput'
        required: true
      responses:
        '200':
          description: Successfully processed the query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      tags:
        - NLP

  /list:
    post:
      description: Retrieves the list of files.<br>
                  **Note - Please select the server https://platform-apis-file-mgmt.sentient.io**
      responses:
        '200':
          description: Successfully retrieved the list of files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      tags:
        - File Management

  /upload:
    post:
      description: Uploads a file (multipart) or a URL (either one is mandatory).<br>
          **Note - Please select the server https://platform-apis-file-mgmt.sentient.io**
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              oneOf:
                - required:
                    - file
                - required:
                    - url
              properties:
                file:
                  type: string
                  format: binary
                  description: File to be uploaded (optional).
                url:
                  type: string
                  format: uri
                  description: URL to be uploaded (optional).
      responses:
        '200':
          description: Successfully uploaded the file or URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      tags:
        - File Management
