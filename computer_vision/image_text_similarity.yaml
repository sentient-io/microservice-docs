
openapi: 3.0.1
info:
  title: Image-Text Similarity
  description: |+
    This Computer Vision microservice is used to predict the similarity between an input image and list of text snippets and return a score corresponding to the most relevant text that matches the image.</br>
    The underlying model is built using a neural network called CLIP (Contrastive Language-Image Pre-Training) that is trained on a variety of (image, text) pairs. </br>
    The size of your image **cannot exceed 5MB**.
  version: v0.1.0
  x-subscribelink: image_text_similarity
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 5 MB/Call
  x-inputfilelimit: |+
    Process up to 5 MB of data per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by per request.
  x-notes: |+
    File size cannot exceed 5 MB.
servers:
  - url: 'https://apish.sentient.io' 
tags:
- name: "v0.1.0"
  description: "Published Date - Aug 19, 2022"
paths:
  /microservices/cv/clip/v0/getpredictions:
    post:
      tags:
        - v0.1.0
      responses:
        '200':
          description: success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                results: 
                  output:
                  - class: a diagram
                    similarity_score: 0.993

                message: Successfully Processed
                status: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'       
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      type: object
      properties:
        results:
          type: object
          description: The result of the API call.
          example: { "<Json": "Object>" }
          properties: 
            output:
              type: array
              example: 
                - class: a class room
                  similarity_score: 1
                - class: a building
                  similarity_score: 0
                - class: a table
                  similarity_score: 0
              description: List of classes and their similarity score
              items:
                oneOf:
                  - type: object 
                    properties:
                      class:
                        description: The class specified under the input text list
                        example: a class room
                        type: object
                      confidence:
                        description: The similarity score of the class with the input image.
                        example: 1
                        type: float

        message:
          type: string
          example: Successfully Processed
          description: Detail description on the API status
        status:
          type: string
          example: Success
          description: The status of the API call success/failure
        
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties: 
        v0.1.0:
          type: array
          items:
            oneOf:
              - type: string
                example: Published Date - Aug 19, 2022
                description: Initial version release     
    input:
      type: object
      required:
        - image_base64
        - text
      properties:
        image_base64:
          x-name: image_base64
          type: string
          default: True
          example: 
          description: |+
            Input image in base64 string format.
        text:
          x-name: text
          type: array
          default: True
          example: ["a classroom","a building","a table"]
          description: |+
            A list of texts or classes to be compared with the input image to check similarity.The length of list should be greater than 1
        
        
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
