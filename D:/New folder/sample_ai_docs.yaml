openapi: 3.0.1

info:

  title: <<Microservice Name>>

  description: |+

      <<Detailed Description>>

  version: '<<Microservice Version>>'

  x-additionalinfo: |+

        << additional details about the microservice eg:use case, suggestions, model details>>

  x-subscribelink: <<urlcode given while creating the microservice>>

  x-apitype: <<api type displayed also in platform microservice detail page>>

  x-apitypedescription: |+

    <<50 characters api description eg: FAST, REST, small files. Displayed also in platform microservice detail page>>

  x-inputfilelimit: |+

    <<API Input limit eg: length of audio, text, etc. Displayed also in platform microservice detail page>>

  x-responsetime: |+

    <<Average API response time. Displayed also in platform microservice detail page>>

  x-billingmethod: |+

    <<API billing method. Displayed also in platform microservice detail page>>

  x-notes: |+

     <<API additional noted. Displayed also in platform microservice detail page>>

  x-apidetailsdesc: |+

     <<one line api description. Displayed also in platform microservice detail page>>

servers:

  - url: 'https://apis.sentient.io'

tags:

- name: "v<<Deploying Version>>"

  description: "Published Date - <<date (Mon DD, YYYY>>"

paths:

  /microservices/ts<<orgcode/<<functioncode>>/v<<version number>>/<getresults/getpredictions>:

    post:

      tags:

        - v<<Deploying Version>>

      responses:

        '200':

          description: Ok

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/success'

              example:

                results:

                  output:

                  - <<yaml format sample output>>

                message: Successfully Processed

                status: Success

        '401':                                           ## Add all supported error response

          description: Unauthorized

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/unauthorized'

        '402':

          description: Payment Required

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/paymentrequired'

        '403':

          description: Forbidden

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/forbidden'

        '404':

          description: Not Found

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/notfound'

        '419':

          description: Input Field Missing

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/inputfieldmissing'

        '413':

          description: Payload Too Large

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/inputlimitexceeded'

        '415':

          description: Unsupported Media Type

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/invalidinput'

        '500':

          description: Internal Server Error

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/servererror'

        '504':

          description: Gateway Timeout

          content:

            application/json:

              schema:

                $ref: '#/components/schemas/gatewaytimeout'

      security:

        - APIAuthorizer: []

      requestBody:

        content:

          application/json:

            schema:

              $ref: '#/components/schemas/input'

        required: true

components:

  schemas:

    success:

      type: object

      properties:

        results:           

          type: object

          description: The result of the API call.

          example: { "<Json": "Object>" }

          properties:

              output:                        ## sample output

                type: <<output type>>        ### verify types for the input type https://swagger.io/specification/

                example: <example>>

                description: <<description about output field>>

                items:

                  oneOf:

                  - type: object 

                    properties:

                      <<output field 1>>:

                        type: <<output type>>    ### verify types for the input type https://swagger.io/specification/

                        format: <<format>>

                        example: <<example>>

                        description: <<description of field>>

                      <<output field 2>>:

                        type: <<output type>>    ### verify types for the input type https://swagger.io/specification/

                        format: <<format>>

                        example: <<example>>

                        description: <<description of field>>

        message:

          type: string

          example: Successfully Processed

          description: Description of the API status

        status:

          type: string

          example: Success

          description: The status of the API call - success/failure

    unauthorized:

      type: object

      properties:

        message:

          type: string

          example: Missing Authentication Token

        status:

          type: string

          example: Failure

    forbidden:

      type: object

      properties:

        message:

          type: string

          example: Access Denied Unauthorized User

        status:

          type: string

          example: Failure

    paymentrequired:

      type: object

      properties:

        message:

          type: string

          example: Insufficient Credits Kindly Top Up

        status:

          type: string

          example: Failure

    notfound:

      type: object

      properties:

        message:

          type: string

          example: Invalid Request URL

        status:

          type: string

          example: Failure

    servererror:

      type: object

      properties:

        message:

          type: string

          example: Internal Server Error

        status:

          type: string

          example: Failure

    gatewaytimeout:

      type: object

      properties:

        message:

          type: string

          example: Request Timeout

        status:

          type: string

          example: Failure

    inputfieldmissing:

      type: object

      properties:

        message:

          type: string

          example: Input Field Missing

        status:

          type: string

          example: Failure

    inputlimitexceeded:

      type: object

      properties:

        message:

          type: string

          example: Input Limit Exceeded

        status:

          type: string

          example: Failure

    invalidinput:

      type: object

      properties:

        message:

          type: string

          example: Invalid Input

        status:

          type: string

          example: Failure

    input:                              

      type: object

      required:

        - <<input mandatory >>

        - <<input mandatory >>

      properties:

        <<input field name1>>:

          x-name: <<input field name1>>

          type: <<input type>>                              ### verify types for the input type https://swagger.io/specification/

          default: <<Mandatory or not eg., true/false>>

          example: <<sample input>>

          description: |+

            <<description>>

            

        <<input field name2>>:

          x-name: <<input field name1>>

          type: <<input type>>                               ### verify types for the input type https://swagger.io/specification/

          default: <<Mandatory or not eg., true/false>>

          example: <<sample input>>

          description: |+

            <<description>>

    versions:

      type: object

      properties: 

        v<<Deploying Version>>:

          type: array

          items:

            oneOf:

              - type: string

                example: 'Published Date - <<date (Mon DD, YYYY>>'

                x-details: <<detail of release>>

                description: <<detail of release>>

        v<<Old Version>>:

          type: array

          items:

            oneOf:

              - type: string

                example: 'Published Date - <<date (Mon DD, YYYY>>'

                x-details: <<detail of release>>

                description: <<detail of release>>

  securitySchemes:                                            ## DO NOT change of the details here

    APIAuthorizer:

      type: apiKey

      name: x-api-key

      in: header

      x-amazon-apigateway-authtype: custom

      description: Authentication is done using the x-api-key in the request header