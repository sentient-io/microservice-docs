components:
  schemas:
    forbidden:
      properties:
        message:
          example: Access Denied Unauthorized User
          type: string
        status:
          example: Failure
          type: string
      type: object
    gatewaytimeout:
      properties:
        message:
          example: Request Timeout
          type: string
        status:
          example: Failure
          type: string
      type: object
    input:
      properties:
        a:
          description: params
          example: ten
          type: string
      required:
      - a
      type: object
    inputfieldmissing:
      properties:
        message:
          example: Input Field Missing
          type: string
        status:
          example: Failure
          type: string
      type: object
    inputlimitexceeded:
      properties:
        message:
          example: Input Limit Exceeded
          type: string
        status:
          example: Failure
          type: string
      type: object
    invalidinput:
      properties:
        message:
          example: Invalid Input
          type: string
        status:
          example: Failure
          type: string
      type: object
    notfound:
      properties:
        message:
          example: Invalid Request URL
          type: string
        status:
          example: Failure
          type: string
      type: object
    paymentrequired:
      properties:
        message:
          example: Insufficient Credits Kindly Top Up
          type: string
        status:
          example: Failure
          type: string
      type: object
    servererror:
      properties:
        message:
          example: Internal Server Error
          type: string
        status:
          example: Failure
          type: string
      type: object
    success:
      properties:
        message:
          description: Description of the API status
          example: Successfully Processed
          type: string
        results:
          description: The result of the API call.
          example:
            <Json: Object>
          properties:
            output:
              description: <<description about output field>>
              example: <example>>
              items:
                oneOf:
                - properties:
                    <<output field 1>>:
                      description: <<description of field>>
                      example: <<example>>
                      format: <<format>>
                      type: <<output type>>
                    <<output field 2>>:
                      description: <<description of field>>
                      example: <<example>>
                      format: <<format>>
                      type: <<output type>>
                  type: object
              type: <<output type>>
          type: object
        status:
          description: The status of the API call - success/failure
          example: Success
          type: string
      type: object
    unauthorized:
      properties:
        message:
          example: Missing Authentication Token
          type: string
        status:
          example: Failure
          type: string
      type: object
    versions:
      properties:
        v1.3.2:
          items:
            oneOf:
            - description: Current Version
              example: Published Date - Sep 05, 2023
              type: string
              x-details: changed minor version
          type: array
        v<<Deploying Version>>:
          items:
            oneOf:
            - description: Archived
              example: Published Date - <<date (Mon DD, YYYY>>
              type: string
              x-details: <<detail of release>>
          type: array
        v<<Old Version>>:
          items:
            oneOf:
            - description: Archived
              example: Published Date - <<date (Mon DD, YYYY>>
              type: string
              x-details: <<detail of release>>
          type: array
      type: object
  securitySchemes:
    APIAuthorizer:
      description: Authentication is done using the x-api-key in the request header
      in: header
      name: x-api-key
      type: apiKey
      x-amazon-apigateway-authtype: custom
info:
  description: '<<Detailed Description>>

    '
  title: <<Microservice Name>>
  version: v1.3.2
  x-additionalinfo: '<< additional details about the microservice eg:use case, suggestions,
    model details>>

    '
  x-apidetailsdesc: '<<one line api description. Displayed also in platform microservice
    detail page>>

    '
  x-apitype: <<api type displayed also in platform microservice detail page>>
  x-apitypedescription: '<<50 characters api description eg: FAST, REST, small files.
    Displayed also in platform microservice detail page>>

    '
  x-billingmethod: '<<API billing method. Displayed also in platform microservice
    detail page>>

    '
  x-inputfilelimit: '<<API Input limit eg: length of audio, text, etc. Displayed also
    in platform microservice detail page>>

    '
  x-notes: '<<API additional noted. Displayed also in platform microservice detail
    page>>

    '
  x-responsetime: '<<Average API response time. Displayed also in platform microservice
    detail page>>

    '
  x-subscribelink: <<urlcode given while creating the microservice>>
openapi: 3.0.1
paths:
  /microservices/ts<<orgcode/<<functioncode>>/v<<version number>>/<getresults/getpredictions>:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                message: Successfully Processed
                results:
                  output:
                  - <<yaml format sample output>>
                status: Success
              schema:
                $ref: '#/components/schemas/success'
          description: Ok
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
          description: Unauthorized
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
          description: Payment Required
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
          description: Not Found
        '413':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'
          description: Payload Too Large
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
          description: Unsupported Media Type
        '419':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
          description: Input Field Missing
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
          description: Internal Server Error
        '504':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
          description: Gateway Timeout
      security:
      - APIAuthorizer: []
      tags: v1.3.2
servers:
- url: https://apis.sentient.io
tags:
- description: Published Date - Sep 05, 2023
  name: v1.3.2
