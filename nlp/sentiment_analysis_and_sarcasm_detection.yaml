openapi: 3.0.1
info:
  title: Sentiment Analysis and Sarcasm Detection
  x-subscribelink: sentiment_analysis_and_sarcasm_detection
  description: |+
    This NLP microservice accepts text and returns a response containing the overall sarcasm of the input text as well as the overall sentiment and confidence score for each sentiment label (positive, negative, and neutral). </br>
    There are no limitations to the number of characters that you can input. However, for the best results, please input short text such as tweets, comments, news, and headlines.</br>
    The input text **should not exceed 5000 characters**.
  version: '0.1.1'
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 5000 characters/Call
  x-inputfilelimit: |+
    Process up to 5000 characters per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by per request.
  x-notes: |+
    Limit cannot exceed 5000 characters.
  x-apidetailsdesc: |+
    Returns overall sentiment and confidence score for each sentiment label.
servers:
  - url: 'https://apisa.sentient.io'
tags:
- name: "v0.1.1"
  description: "Published Date - Mar 28, 2022"
paths:
   /microservices/nlp/sentimentanalysis/v0/getpredictions:
    post:
      tags:
        - v0.1.1
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                message: Successfully Processed
                results:
                  anger: 0.42
                  fear: 0.352
                  joy: 0.513
                  sadness: 0.371
                  sarcasm_result: 0.92
                  valence: 0.584
                status: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      type: object
      properties:
        message:
          type: string
          example: Successfully Processed
          description: Description of the API status.
        status:
          type: string
          example: Success
          description: The status of the API call - Success/Failure.
        results:
          type: object
          example: {<Json Object>}
          description: Json Object in the returned results
          properties:
            anger:
              type: number
              format: float
              example: 0.42
              description: |+ 
                Range 0-1
                Continuous variable ranging from 0 to 1;
                0 suggests that this text does not express any anger;
                0.52 to 0.60 suggests medium intensity of the emotion
                0.60 to 0.80 suggest high intensity of the emotion
                0.8 to 1 indicates an extremely high intensity of anger;
                Values between 0.48 and 0.52 are considered neutral.     
            fear (or Anxiety):
              type: number
              format: float
              example: 0.352
              description: |+
                Range 0-1
                Continuous variable ranging from 0 to 1;
                0 suggests that this text does not express any Fear/Anxiety;
                0.52 to 0.60 suggests medium intensity of the emotion
                0.60 to 0.80 suggest high intensity of the emotion
                0.80 to 1 indicates an extremely high intensity of Fear/Anxiety;
                Values between 0.48 and 0.52 are considered neutral.
            sadness:
              type: number
              format: float 
              example: 0.371
              description: |+
                Range 0-1
                Continuous variable ranging from 0 to 1;
                0 suggests that this text does not express any Sadness;
                0.52 to 0.60 suggests medium intensity of the emotion
                0.60 to 0.80 suggest high intensity of the emotion
                0.80 to 1 indicates an extremely high intensity of Sadness;
                Values between 0.48 and 0.52 are considered neutral. 
            joy:
              type: number
              format: float
              example: 0.371
              description: |+
                Range 0-1
                Continuous variable ranging from 0 to 1;
                0 suggests that this text does not express any Joy;
                0.52 to 0.60 suggests medium intensity of the emotion
                0.60 to 0.80 suggest high intensity of the emotion
                0.80 to 1 indicates an extremely high intensity of Joy;
                Values between 0.48 and 0.52 are considered neutral.
            valence (overall sentiment):
              type: number
              format: float
              example: 0.584
              description: |+
                Range 0-1
                Continuous variable ranging from 0 to 1;
                0 suggests that this text expresses a very negative sentiment;
                1 indicates that this text expresses a very positive sentiment;
                Values between 0.48 and 0.52 are considered neutral. 
            sarcasm_result:
              type: number
              format: float 
              example: 0.584
              description: |+
                Range 0-1
                Continuous variable ranging from 0 to 1;
                0-0.48 suggests that there’s a low probability that it’s a sarcastic
                comment;
                0.52-1 suggests that there’s a high probability that it’s a sarcastic
                comment;
                Values between 0.48 and 0.52 are considered neutral. 
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties: 
        v0.1.1:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Mar 28, 2022
              x-details: Error Handling for Bad Request
              description: Latest Version      
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Sep 08, 2021
              x-details: Initial version release
              description: Archived
    input:
      type: object
      properties:
        text:
          type: string
          default: true
          example: this is a good day.
          description: Input String
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
