
openapi: 3.0.1
info:
  title: Taxonomy Matcher ENG
  description: |+
    This NLP microservice matches the input word with the name of a leaf node in the predefined English taxonomy. The entire branch from the matched leaf node to the root of the corresponding taxonomy tree is returned.
    
    The full taxonomy consists of major categories (for e.g. retail, cars, etc.). Each category is stored as a separate taxonomy tree within the Taxonomy instance. Each node in a taxonomy tree is identified using a node_id. It has attributes: name (a human readable string), level (how far it is from the root node) and type (whether it is a root node, leaf node or body node).
    
    This microservice helps to identify the types of concept that are frequently mentioned in an article.
    
  version: '1.0.1'
  x-additionalinfo: |+
    Suggested Use Cases:
    - Categorise a particular word to pre-built taxonomy tree.
    - This microservice can be used to manage taxonomies, such as a hierarchy of product categories used for an eCommerce site. The information in a taxonomy is meta-information about the categories used to classify a set of things. For an eCommerce site, the set of things are items in the product catalog. Users can use this meta-information to enhance search.
  x-subscribelink: taxonomy_matcher_eng
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 5000 characters/Call
  x-inputfilelimit: |+
    Process up to 5000 characters per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by per request.
  x-notes: |+
    Limit cannot exceed 5000 characters.
  x-apidetailsdesc: |+
    Matches the input word with the name of a leaf node in the predefined English taxonomy
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v1.0.1"
  description: "Published Date - May 12, 2021"
paths:
  /microservices/nlp/taxonomy/v1/getpredictions:
    post:
      tags:
        - v1.0.1
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                results:
                  bus:
                  - 
                    - careers/job by industry/travel/bus
                    - 1
                  - 
                    - news/business news/travel/bus
                    - 1
                message: Successfully Processed
                status: Success
                
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '413':
          description: Payload Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded' 
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidinput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      type: object
      properties:
        results:
          type: object
          description: The result of the API call.
          example: { "<Json": "Object>" }
          properties:
            <requested_object> :
              type: array
              example: [["news/sport/swimming/bike",1]]
              description: List of taxonomy for the requested object name
        message:
          type: string
          example: Successfully Processed
          description: Description of the API status
        status:
          type: string
          example: Success
          description: Status of the API call - success/failure
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    invalidinput:
      type: object
      properties:
        message:
          type: string
          example: Invalid Input
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure

    versions:
      type: object
      properties: 
        v1.0.1:
          type: array
          items:
            oneOf:
              - type: string
                example: Published Date - May 12, 2021
                x-details: Error handling fixed
                description: Latest Version
        v1.0.0:
          type: array
          items:
            oneOf:
              - type: string
                example: Published Date - Oct 30, 2020
                x-details: Standardizing Output JSON
                description: Depreciated on May 11, 2021
        v0.1.0:
          type: array
          items:
            oneOf:
              - type: string
                example: Published Date - Jan 24, 2020
                x-details: Initial version release
                description: Depreciated on Jul 07, 2022
    input:
      type: object
      required:
        - text
      properties:
        text:
          x-name: text
          type: array
          default: true
          example: ["bus","cars","bike","train","buildings","Audi R8"]
          description: |+
            A list of object names to be classified. Up to a maximum of 20 search terms can be processed each time.
            
            Supported formats: ASCII only
        threshold:
          x-name: threshold
          type: number
          format: float
          default: true
          example: 1
          description: |+
            The "threshold" specifies the level of similarity that the search term must match with terms in the taxonomy tree. Values range between 0.0 and 1.0 .It is optional. The default value is 1 (which means an exact match is required). Lowering the threshold will allow matches that are similar but not identical.
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
